{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amol\\\\HittingApis\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const dummyMovies = [{\n    id: 1,\n    title: 'Some Dummy Movie',\n    openingText: 'This is the opening text of the movie',\n    releaseDate: '2021-05-18'\n  }, {\n    id: 2,\n    title: 'Some Dummy Movie 2',\n    openingText: 'This is the second opening text of the movie',\n    releaseDate: '2021-05-19'\n  }];\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState([false]);\n\n  const fetchMoviesHandler_usingJSPromises = () => {\n    fetch('https://swapi.dev/api/films/').then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          realeaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  };\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.realeaseDate\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Amol/HittingApis/src/App.js"],"names":["React","useState","MoviesList","App","dummyMovies","id","title","openingText","releaseDate","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler_usingJSPromises","fetch","then","response","json","data","transformedMovies","results","map","movieData","episode_id","opening_crawl","realeaseDate","release_date","fetchMoviesHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,WAAW,GAAG,CAClB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,kBAFT;AAGEC,IAAAA,WAAW,EAAE,uCAHf;AAIEC,IAAAA,WAAW,EAAE;AAJf,GADkB,EAOlB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,oBAFT;AAGEC,IAAAA,WAAW,EAAE,8CAHf;AAIEC,IAAAA,WAAW,EAAE;AAJf,GAPkB,CAApB;AAeA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAC,KAAD,CAAD,CAA1C;;AAEA,QAAMY,kCAAkC,GAAG,MAAM;AAC/CC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CAAsCC,IAAtC,CAA2CC,QAAQ,IAAI;AACrD,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAFD,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACd,YAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAS,IAAI;AACvD,eAAM;AACJjB,UAAAA,EAAE,EAAEiB,SAAS,CAACC,UADV;AAEJjB,UAAAA,KAAK,EAAEgB,SAAS,CAAChB,KAFb;AAGJC,UAAAA,WAAW,EAAEe,SAAS,CAACE,aAHnB;AAIJC,UAAAA,YAAY,EAAEH,SAAS,CAACI;AAJpB,SAAN;AAMD,OAPyB,CAA1B;AAQAhB,MAAAA,SAAS,CAACS,iBAAD,CAAT;AACD,KAZD;AAaD,GAdD;;AAgBA,iBAAeQ,kBAAf,GAAoC;AAClCf,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMI,QAAQ,GAAG,MAAMF,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAT,EAAnB;AAEA,UAAME,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AAExD,aAAO;AACLjB,QAAAA,EAAE,EAAEiB,SAAS,CAACC,UADT;AAELjB,QAAAA,KAAK,EAAEgB,SAAS,CAAChB,KAFZ;AAGLC,QAAAA,WAAW,EAAEe,SAAS,CAACE,aAHlB;AAILhB,QAAAA,WAAW,EAAEc,SAAS,CAACG;AAJlB,OAAP;AAMD,KARyB,CAA1B;AASAf,IAAAA,SAAS,CAACS,iBAAD,CAAT;AACAP,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAAA;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEe,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAElB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAUD;;AAED,eAAeN,GAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const dummyMovies = [\n    {\n      id: 1,\n      title: 'Some Dummy Movie',\n      openingText: 'This is the opening text of the movie',\n      releaseDate: '2021-05-18',\n    },\n    {\n      id: 2,\n      title: 'Some Dummy Movie 2',\n      openingText: 'This is the second opening text of the movie',\n      releaseDate: '2021-05-19',\n    },\n  ];\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState([false]);\n\n  const fetchMoviesHandler_usingJSPromises = () => {\n    fetch('https://swapi.dev/api/films/').then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map( movieData => {\n        return{\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          realeaseDate: movieData.release_date\n        }\n      })\n      setMovies(transformedMovies);\n    })\n  };\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n\n    const transformedMovies = data.results.map((movieData) => {\n\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.realeaseDate\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}